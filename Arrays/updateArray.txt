To update an existing array item , one can refer to index no. for indexed arrays and the key name for associative array
example ;
    changing 2nd array item from bmw to Ford
    
    $cars = array ("benx", "bmw" , "toyota");
    $cars[1] ="ford";

to update items from an associative array, use key name
example;
     updating year to 2025

     $cars = array ("brand" => "ford" , "model" => "mustang" , "year" => 1964);
     $cars["year"] = 2015;


Update Array Items in a Foreach Loop
One way is to insert the & character in the assignment to assign the item value by reference,
and thereby making sure that any changes done with the array item inside the loop will be done to the original array

example ;
Change ALL item values to "Ford":

    $cars = array("Volvo", "BMW", "Toyota");
    foreach ($cars as &$x) {
        $x = "Ford";
    }
    unset($x);
    var_dump($cars);

Note: Remember to add the unset() function after the loop. If omitted, the $x variable will remain as a reference to the last array item.
To demonstrate this, see what happens when we change the value of $x after the foreach loop
example ;
    Demonstrate the consequence of forgetting the unset() function:

        $cars = array("Volvo", "BMW", "Toyota");
        foreach ($cars as &$x) {
            $x = "Ford";
        }

        $x = "ice cream";

        var_dump($cars);
