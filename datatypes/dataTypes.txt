PHP supports the following data types:

String
Integer
Float (floating point numbers - also called double)
Boolean
Array
Object
NULL
Resource

Getting the data type 
    -use the var_dump() fn 

1.string 
    $x = "Hello";
    var_dump($x);

2 . float 
    $x = 10.25
    var_dump($x)

3. integer 
    $x = 10
    var_dump($x)

4 . Boolean
    $x = true;
    var_dump($x)

5. Array
    $fruits  = array ("Mango", "Orange " ,"guava ")
    var_dump($fruits);

6. Object
    classes and objects are the main aspects of OOP
    class = template for objects
    object = instance of a class

eg 
    class Car{
        public $color;
        public $model:
        public function __construct ($color , $model){
            %this-> color = $color;
            $this->model = $model;
        }
        public function message() {
            return "My car is a " . $this->color . " " . $this->model . "!";
        }
        }

        $myCar = new Car("red", "Volvo");
        var_dump($myCar);

        }
    }

7. Null value
has no value assigned to it
 $x = null ;
 var_dump($x)

8 . changing a data type 
if you assign a string to same variable ie that had an int , the type will change to a string 

example
    $x = 5;
    var_dump($x);

    $x = "Hello";
    var_dump($x);

If you want to change the data type of an existing variable, but not by changing the value, you can use casting
Casting allows one to change data type on variables

example 
        $x = 5;
        $x = (string) $x;
        var_dump($x)    


9. Resource

The special resource type is not an actual data type. It is the storing of a reference to functions and resources external to PHP.

A common example of using the resource data type is a database call